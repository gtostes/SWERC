#include<bits/stdc++.h>
using namespace std;
 
#define _ << ' ' <<
#define pb push_back
#define eb emplace_back
#define all(x) begin(x), end(x)
#define mp make_pair
#define f first
#define s second
#define sz(x) int((x).size())
#define each(x,A) for(auto &x: A)
#define FOR(i, a, b) for (int i=a; i<(b); i++)
#define F0R(i, a) for (int i=0; i<(a); i++)
#define FORd(i,a,b) for (int i = (b)-1; i >= a; i--)
#define F0Rd(i,a) for (int i = (a)-1; i >= 0; i--)
 
using ll = long long;
using db = long double;
using pl = pair<ll,ll>;
using pi = pair<int,int>;
//using cd = complex<db>;
using vi = vector<int>;
using vd = vector<db>;
using vl = vector <ll>;
using str = string;
template<class T> using V = vector<T>; 
 
//const int MOD = 1e9+7;
 
template<typename T> ostream& operator<<(ostream &os, const vector<T> &v) { os << '{'; string sep; for (const auto &x : v) os << sep << x, sep = ", "; return os << '}'; }
template<typename T, size_t size> ostream& operator<<(ostream &os, const array<T, size> &arr) { os << '{'; string sep; for (const auto &x : arr) os << sep << x, sep = ", "; return os << '}'; }
template<typename A, typename B> ostream& operator<<(ostream &os, const pair<A, B> &p) { return os << '(' << p.first << ", " << p.second << ')'; }
 
void dbg_out() { cerr << endl; }
template<typename Head, typename... Tail> void dbg_out(Head H, Tail... T) { cerr << ' ' << H; dbg_out(T...); }
 
#ifdef NEAL_DEBUG
#define dbg(...) cerr << "(" << #__VA_ARGS__ << "):", dbg_out(__VA_ARGS__)
#else
#define dbg(...)
#endif
 
/*mt19937_64 mt_rand(chrono::high_resolution_clock::now().time_since_epoch().count());
uniform_int_distribution<long long> rg(1,1e18);*/
 
vl a{0,
502983,995306,1498258,1998844,2500400,3001393,3500189,3999081,4500820,5004364,
5512697,6011435,6511001,7012600,7500029,8002855,8499688,9000463,9504060,10006016,
10504170,11005541,11505757,12003250,12506329,13006129,13506761,14003713,14508693,15011683,
15514848,16015235,16516066,17013804,17517443,18017773,18516743,19017244,19515097,20012407,
20513725,21014793,21521369,22028492,22530433,23031470,23537550,24032362,24530608,25031296,
25533395,26034534,26540391,27038504,27539195,28039980,28541830,29040198,29539710,30040231,
30539972,31037671,31539440,32037695,32538480,33040919,33543018,34042893,34544671,35042602,
35544907,36038770,36539205,37041078,37541449,38036708,38537905,39039571,39539377,40042828,
40547257,41043465,41545883,42047577,42546233,43049621,43551063,44052908,44554559,45056959,
45554672,46052911,46552064,47050518,47548215,48046434,48544071,49048470,49549753,50056830,
50557375,51058008,51557273,52058653,52565703,53064233,53564851,54060932,54556692,55056277,
55556725,56054526,56555312,57060177,57559659,58061101,58560779,59060167,59564033,60057167,
60559018,61060772,61558121,62056275,62554179,63053853,63560320,64057792,64560044,65062410,
65562337,66066909,66572916,67074121,67574932,68077203,68576835,69074812,69578218,70077203,
70572324,71072153,71571243,72070163,72572033,73073858,73576656,74076617,74575254,75074286,
75578103,76080479,76581009,77082751,77586588,78083422,78588163,79089031,79587502,80089333,
80589335,81086971,81585288,82082868,82577796,83075877,83574666,84074594,84578689,85076566,
85577765,86077885,86575097,87071796,87569836,88066475,88565277,89061257,89557866,90060816,
90559357,91057196,91554797,92059328,92557144,93053610,93558721,94066087,94568344,95067617,
95568006,96069983,96578839,97082646,97581999,98083970,98584271,99089614,99588123,100089173,
100587587,101080652,101581032,102077739,102578452,103084620,103581260,104078916,104578790,105080523,
105576391,106075637,106578725,107076332,107578419,108087161,108592027,109088095,109590435,110081437,
110584146,111084445,111582688,112082235,112579315,113075874,113580176,114079358,114578149,115071718,
115569496,116070241,116572061,117077203,117584728,118087024,118588257,119089313,119593212,120091492,
120589823,121090064,121591531,122096448,122603662,123105790,123604623,124099108,124603004,125100277,
125599822,126098295,126601495,127097434,127598937,128098749,128598478,129099926,129606264,130104565,
130608500,131101704,131599110,132104529,132606643,133105067,133613967,134112908,134614468,135114811,
135611589,136107892,136605753,137105532,137604957,138104641,138612280,139114170,139611189,140110603,
140616828,141115404,141616540,142117990,142613775,143106656,143615170,144114854,144614439,145118771,
145613726,146116601,146615821,147114826,147616700,148117856,148619782,149119782,149619012,150119936,
150621711,151122089,151619911,152113038,152614526,153117303,153617158,154118719,154618655,155117508,
155615238,156115831,156613956,157108725,157608612,158110685,158607151,159109836,159609211,160106697,
160604579,161105359,161609777,162107537,162605677,163105695,163606181,164109508,164610470,165108247,
165606553,166105383,166604290,167104866,167605345,168104811,168604078,169099354,169602580,170101751,
170601743,171099770,171601945,172099893,172599640,173092341,173589383,174086057,174584382,175085228,
175581053,176075255,176574300,177073130,177572982,178073803,178573800,179075535,179575497,180074324};
 
vl b{1611516670,
24831098818,85091177611,241479741103,647343511917,6995323118,38803296781,121352198450,335585309480,891568792743,14370630249,
57943890614,171026377942,464501064994,1473880836,24473902285,84164171463,239073950242,641099940086,6806229870,38312556854,
120078616969,332280076921,882990965157,14112718818,57274551969,169289292334,459992934005,1337854506,24120883462,83248007737,
236696297515,634929391393,6620357676,37830176352,118826730177,329031146994,874559255859,13856007495,56608327843,167560289742,
455505780300,1202088386,23768539351,82333594782,234323188514,628770636033,6435063656,37349296386,117578737596,325792323073,
866153773131,13603643125,55953385061,165860564948,451094609069,1069184517,23423623727,81438460553,232000112395,622741727028,
6253085456,36877021659,116353077724,322611458168,857898708083,13354228762,55306098243,164180708576,446735001036,937685173,
23082353134,80552785887,229701585730,616776528825,6072677726,36408822720,115137995242,319458043535,849714882133,13107744445,
54666415645,162520587621,442426611046,807311470,22744003927,79674693251,227422736603,610862399010,5893434651,35943646365,
113930757179,316324986992,841583890229,12861712571,54027907086,160863512855,438126126427,677744489,22407748132,78802032994,
225157985322,604984856037,5716565771,35484631509,112739509636,313233429815,833560598601,12619930630,53400428095,159235062884,
433899929956,549348706,22074532063,77937262116,222913708970,599160450170,5540033707,35026490825,111550530977,310147760736,
825552588218,12376359574,52768306127,157594563185,429642460847,421224956,21742021880,77074322838,220674185952,593348380684,
5364465484,34570851523,110368043254,307078936923,817588294774,12137286578,52147857402,155984357764,425463613204,295498034,
21415731952,76227526294,218476557046,587645035156,5192879414,34125546861,109212377002,304079721068,809804649437,11901289737,
51535392117,154394871503,421338536015,170920662,21092425584,75388473090,216299023615,581993842114,5021923689,33681877906,
108060955255,301091520582,802049592223,11668023988,50930014590,152823779731,417261196672,47523507,20772181826,74557367833,
214142117131,576396181355,4853507682,33244800104,106926639410,298147713933,794409746597,11435650672,50326953208,151258698876,
413199457023,1092995098244,20453692433,73730815694,211997026857,570829185964,4685264556,32808171177,105793488505,295206930517,
786777746632,11206260411,49731633517,149713708985,409189858068,1082589280689,20139991649,72916691179,209884189289,565345893787,
4518737141,32375994660,104671892500,292296134838,779223572048,10978265333,49139934610,148178116403,405204647340,1072246754882,
19827002537,72104413141,207776143636,559875037177,4354683110,31950237454,103566955958,289428573982,771781602051,10752858133,
48554951837,146659953560,401264670349,1062021621551,19518274761,71303194772,205696800289,554478669836,4191483496,31526697331,
102467773271,286575945643,764378384800,10530470029,47977804257,145162124809,397377465370,1051933443521,19213652728,70512631458,
203645109528,549154066966,4030509852,31108934194,101383583168,283762226666,757076146220,10309979851,47405582216,143677078963,
393523435027,1041931361613,18910272345,69725290790,201601781662,543851168197,3869893989,30692099632,100301802920,280954761586,
749790137907,10089997457,46834678258,142195453631,389678281232,1031952315675,18609763453,68945402068,199577793939,538598461112,
3711222251,30280310451,99233116795,278181278692,742592321221,9872154607,46269326711,140728238241,385870524711,1022070324749,
18311382009,68171034631,197568134878,533382940567,3554026557,29872351977,98174372077,275433596512,735461463758,9655697881,
45707572329,139270358519,382086996623,1012251211594,18014204912,67399792486,195566586555,528188468873,3397755113,29466792348,
97121853126,272702071066,728372535169,9442541797,45154383935,137834709208,378361160925,1002581823366,17722589590,66642984633,
193602498691,523091215660,3243839556,29067346493,96085200428,270011722255,721390470774,9232083997,44608198160,136417233148,
374682489219,993034836731,17435952907,65899097615,191671943332,518080986662,3092594895,28674832371,95066537244,267368060404,
714529568823,9025028345,44070841770,135022671628,371063286307,983642184332,17151396830,65160610118,189755401031,513107125545,
2941349750,28282316870,94047870750,264724390129,707668644954,8817435949,43532092696,133624495703,367434702789,974225187667,
16866112488,64420232573,187833953381,508120532998,2790547793,27890951615,93032189055,262088465781,700827824085,8611289031
};
 
vl C{0,
492764,996475,1497779,1996352,2490543,2989775,3488899,3989490,4486808,4993235,
5494010,5996098,6497374,6997407,7495285,7992362,8495285,8996869,9496079,9996576,
10498814,11000008,11502661,12001162,12499430,12998208,13495948,13996422,14499891,14998686,
15497910,15999508,16502181,16999163,17497614,17996538,18495731,18994124,19496418,19993038,
20491826,20989239,21495554,21998171,22497116,22996728,23482774,23980040,24480949,24982253,
25482269,25985881,26487913,26986234,27489500,27990011,28491196,28984416,29485118,29982287,
30481349,30982040,31483759,31983283,32481284,32977022,33477310,33975031,34475173,34972115,
35477368,35980005,36479657,36978939,37484661,37988110,38482998,38982073,39481989,39981208,
40479033,40979349,41481924,41982004,42477479,42978761,43481093,43979657,44480524,44985106,
45483089,45985752,46488949,46991517,47488768,47991150,48489710,48989942,49476365,49976119,
50477142,50978770,51485391,51990537,52491631,52992007,53493257,53993460,54492156,54995563,
55496218,55994006,56500243,57001652,57499670,57998050,58499962,59003236,59498596,60000601,
60503634,61012172,61505942,62003829,62504793,63005490,63502084,64002090,64499945,64999574,
65501988,66002752,66502694,67003595,67500943,68002282,68495783,68995293,69494025,69991543,
70492273,70990229,71488913,71990020,72492023,72993629,73493775,73993420,74491874,74987306,
75484871,75986229,76485676,76990231,77487536,77990664,78489579,78991174,79493252,79990456,
80491832,80989327,81488310,81986587,82482761,82980133,83478514,83978222,84476370,84973923,
85474643,85976061,86472026,86965082,87464838,87963221,88464124,88965470,89463855,89965066,
90465910,90967306
};
 
vl D{
8611289031,
42997094460,132236053862,363831381122,964873751577,16584933110,63690508293,185940153434,503205692670,2642849213,27507640334,
92037409532,259506787597,694127783341,8408478569,42470755600,130870085428,360286383818,955673679504,16305846013,62966213954,
184060445596,498327425388,2494906886,27123696446,91040988045,256920848083,687416684413,8205836534,41944853623,129505250351,
356744327308,946481240484,16028750776,62247089205,182194153727,493483974725,2348801474,26744519953,90056939124,254367017868,
680788916004,8005159813,41424051771,128153651425,353236621546,937377948652,15754583983,61535564270,180347585115,488691710416,
2204342561,26369616294,89083979091,251841966261,674235835123,7807185883,40910264811,126820257917,349776163226,928397275086,
15482664265,60829870875,178516150667,483938722687,2061291639,25998366652,88120502202,249341525338,667746624028,7611195984,
40401626407,125500225861,346350380998,919506593602,15215211602,60135770532,176714803216,479263817982,1919875288,25631359205,
87168034686,246869656193,661331563257,7417472628,39898870311,124195459809,342964216879,910718730095,14949483477,59446145748,
174925070569,474619056075,1779653573,25267452181,86223613511,244418668960,654970695888,7225655847,39401062381,122903535528,
339611380876,902017360983,14686843353,58764535098,173156136173,470028269770,1641091126,24907851004,85290366788,241996682198,
648685091403,7036398235,38909896063,121628847702,336303276921,893432080921,14426535414,58088977200,171402910432,465478252203,
1503306929,24550269765,84362362274,239588300041,642434794044,6847954612,38420842050,120359641457,333009399217,884883721897,
14169639676,57422274410,169672665824,460987875390,1367467361,24197735416,83447455993,237213911078,636272716115,6660774750,
37935067831,119098947334,329737612154,876392692721,13913445317,56757392088,167947145338,456509758572,1232287961,23846914106,
82536994903,234851057896,630140576910,6476637058,37457188797,117858742961,326519000500,868039666370,13660722766,56101519545,
166245007100,452092323707,1099416914,23502083660,81642081850,232528556063,624113157554,6294135767,36983556701,116629560400,
323328993281,859760873966,13410098183,55451092057,164557000612,447711564439,966366117,23156786640,80745957867,230202910861,
618077581693,6112287109};
 
void easy(ll k){
	ll c = 1611516670;
	ll m = 1ll << 40;
	ll ans = 0;
	for(int i=0; i<k; i++){
		if(!(c&1)) ans++;
		c = c + (c>>20) + 12345;
		if(c>=m) c-=m;
	}
	cout << ans << endl;
//	exit(0);
}
 
int main(){
  ios::sync_with_stdio(false);
#ifndef NEAL_DEBUG
  cin.tie(nullptr);
#endif
  /*freopen("names.txt", "r", stdin);
  freopen("names.csv", "w", stdout);*/
  ll n; cin >> n;
  //easy(n);
  if(n==0){
  	cout << 0 << endl;
  	return 0;
  }
  ll er = 8611289031;
  ll r = 542129209-360000000;
  ll tr = 91029304;
  ll p = 360000000;
  ll m = 1ll << 40;
  ll c = 1611516670;
  ll ct = 0;
  if(n<=p){
  	ll nd = n/1000000;
  	ll val = a[nd];
  	c = b[nd];
  	for(ll i=1000000*nd; i<n; i++){
  		if(!(c&1)) val++;
  		c = c + (c>>20) + 12345;
  		if(c>m) c-=m;
	}
	cout << val << endl;
  }
  else{
  	ll val = 180074324;
  	c = er;
  	n-=p;
  	ll mt = n/r;
  	val+=mt*tr;
  	n-=mt*r;
  	ll nd = n/1000000;
  	val+=C[nd];
  	c = D[nd];
  	for(ll i=1000000*nd; i<n; i++){
  		if(!(c&1)) val++;
  		c = c + (c>>20) + 12345;
  		if(c>m) c-=m;
	}
	cout << val << endl;
  }
}
